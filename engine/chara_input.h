#ifndef INPUT_H_INCLUDED
#define INPUT_H_INCLUDED

#include <deque>

struct Motion_Data;

typedef std::deque<uint32_t> input_deque;  //"Buffer" containing processed input.

namespace act //This is going to be refactored... yet again.
{
	enum //Instant input array actions
	{
		NOTHING = -1,
		NEUTRAL = 0,
		UP,
		UP_RIGHT,
		RIGHT,
		DOWN_RIGHT,
		DOWN,
		DOWN_LEFT,
		LEFT,
		UP_LEFT,
		HIGH_PAIN,
		MID_PAIN,
		LOW_PAIN,
		A5,
		A2,
		A6,
		B5,
		B2,
		B6,
		B4,
		B3,
		C5,
		C2,
		C6,
		C4,
		C3,
		D5,
		D2,
		_U1, //misc instant actions not directly generated by the player
		GUARD4,
		GUARD1,
		GUARD4_STARTUP,
		GUARD5_STARTUP,
		STAND_180,
		CROUCH_180,
		STAND_UP,
		BUNKER, //Special reserved motions.
		TRAIT,
		TECHING,
		_U3,
		_U4,             
	};
}

int InstantInput(input_deque *keyPresses, float side, Motion_Data* motions); //returns an action, depending from key presses, from the act enum which is then processed by the character.
bool MotionInput(std::string motion, input_deque *keyPresses, int window, float side);


#endif // INPUT_H_INCLUDED
